#!/bin/bash

set -euo pipefail

{{ if ne .chezmoi.os "linux" }}
    echo "Flatpak is only supported on Linux. Skipping Flatpak package installation."
    exit 0
{{ end }}

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if flatpak is installed
if ! command -v flatpak &> /dev/null; then
    print_error "Flatpak is not installed. Please install Flatpak first."
    exit 1
fi

# Check if flathub remote is added
if ! flatpak remotes --user | grep -q flathub; then
    print_status "Adding Fluthub remote..."
    flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    print_success "Flathub remote added"
fi

{{- $packagesFile := .chezmoi.sourceDir | printf "%s/.chezmoidata/packages.yaml" }}
{{- $packagesContent := include $packagesFile }}
{{- $packagesData := fromYaml $packagesContent }}
{{- range $category, $apps := $packagesData.packages.flatpaks }}
print_status "Installing {{ $category }} applications..."

{{- range $app := $apps }}
# Install {{ $app }}
if flatpak list --app | grep -q "{{ $app }}"; then
    print_warning "{{ $app }} is already installed, skipping..."
else
    print_status "Installing {{ $app }}..."
    if flatpak install --user -y flathub {{ $app | quote }}; then
        print_success "{{ $app }} installed successfully"
    else
        print_error "Failed to install {{ $app }}"
    fi
fi
{{- end }}
{{- end }}

print_success "Flatpak installation process completed!"

# Optional: List installed flatpaks
print_status "Currently installed Flatpaks:"
flatpak list --app --columns=name,application

